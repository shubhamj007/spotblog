{"version":3,"sources":["ng://@tinymce/tinymce-angular/editor/Events.ts","ng://@tinymce/tinymce-angular/utils/Utils.ts","ng://@tinymce/tinymce-angular/TinyMCE.ts","ng://@tinymce/tinymce-angular/editor/editor.component.ts","ng://@tinymce/tinymce-angular/utils/ScriptLoader.ts","ng://@tinymce/tinymce-angular/editor/editor.module.ts"],"names":["Events","this","onBeforePaste","EventEmitter","onBlur","onClick","onContextMenu","onCopy","onCut","onDblclick","onDrag","onDragDrop","onDragEnd","onDragGesture","onDragOver","onDrop","onFocus","onFocusIn","onFocusOut","onKeyDown","onKeyPress","onKeyUp","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onPaste","onSelectionChange","onActivate","onAddUndo","onBeforeAddUndo","onBeforeExecCommand","onBeforeGetContent","onBeforeRenderUI","onBeforeSetContent","onChange","onClearUndos","onDeactivate","onDirty","onExecCommand","onGetContent","onHide","onInit","onLoadContent","onNodeChange","onPostProcess","onPostRender","onPreInit","onPreProcess","onProgressState","onRedo","onRemove","onReset","onSaveContent","onSetAttrib","onObjectResizeStart","onObjectResized","onObjectSelected","onSetContent","onShow","onSubmit","onUndo","onVisualAid","Output","validEvents","unique","uuid","prefix","time","Date","getTime","Math","floor","random","String","isTextarea","element","tagName","toLowerCase","normalizePluginArray","plugins","Array","isArray","split","getTinymce","w","window","undefined","tinymce","scriptState","listeners","scriptId","scriptLoaded","EDITOR_COMPONENT_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","EditorComponent","multi","_super","elementRef","ngZone","platformId","_this","call","cloudChannel","apiKey","id","toolbar","onTouchedCallback","onChangeCallback","x","initialise","bind","__extends","Object","defineProperty","prototype","_disabled","val","editor","initialized","setMode","writeValue","value","initialValue","setContent","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","init","__assign","readonly","ngAfterViewInit","isPlatformBrowser","inline","createElement","ownerDocument","doc","channel","state","url","callback","push","getElementById","forEach","scriptTag","type","addEventListener","src","head","appendChild","ngOnDestroy","remove","document","style","visibility","nativeElement","initPlugins","inputPlugins","finalInit","target","disabled","concat","setup","on","e","initEditor","runOutsideAngular","initEvent","ctx","run","getContent","eventName","eventEmitter","observers","length","emit","event","substring","Component","args","selector","template","providers","ElementRef","NgZone","decorators","Inject","PLATFORM_ID","Input","EditorModule","NgModule","imports","CommonModule","FormsModule","declarations","exports"],"mappings":"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AA,0BACAA,EAAAA,wBACAA,EAAAA,kCACAA,EAAAA,2BACAA,EAAAA,0BACAA,EAAAA,gCACAA,EAAAA,oCACAA,EAAAA,mCACAA,EAAAA,iCACAA,EAAAA,mCACAA,EAAAA,yBACAA,EAAAA,6BACAA,EAAAA,6BACAA,EAAAA,wBACAA,EAAAA,8BACAA,EAAAA,6BACAA,EAAAA,uBACAA,EAAAA,uBACAA,EAAAA,8BACAA,EAAAA,6BACAA,EAAAA,8BACAA,EAAAA,6BACAA,EAAAA,0BACAA,EAAAA,6BACAA,EAAAA,gCACAA,EAAAA,uBACAA,EAAAA,yBACAA,EAAAA,wBACAA,EAAAA,8BACAA,EAAAA,4BACAA,EAAAA,oCACAA,EAAAA,gCACAA,EAAAA,iCACAA,EAAAA,6BACAA,EAAAA,uBACAA,EAAAA,yBACAA,EAAAA,uBACAA,EAAAA,4BACAA,EAAAA,UACHlE,KAEamE,EAAgC,CAC3C,aACA,YACA,kBACA,sBACA,qBACA,mBACA,qBACA,gBACA,SACA,WACA,eACA,UACA,gBACA,SACA,QACA,aACA,eACA,UACA,SACA,aACA,YACA,gBACA,aACA,SACA,gBACA,UACA,YACA,aACA,eACA,SACA,SACA,YACA,aACA,UACA,gBACA,cACA,eACA,eACA,cACA,aACA,cACA,YACA,eACA,sBACA,kBACA,mBACA,UACA,gBACA,eACA,eACA,kBACA,SACA,WACA,UACA,gBACA,oBACA,cACA,eACA,SACA,WACA,SACA,eC9GEC,EAAS,EAEAC,EAAO,SAACC,GACnB,IACMC,GADO,IAAIC,MACCC,UAKlB,OAAOH,EAAS,IAJDI,KAAKC,MAAsB,IAAhBD,KAAKE,aAE/BR,EAEwCS,OAAON,IAGpCO,EAAa,SAACC,GACzB,YAA0B,IAAZA,GAA6D,aAAlCA,EAAQC,QAAQC,eAGrDC,EAAuB,SAACC,GAC5B,YAAuB,IAAZA,GAAuC,KAAZA,EAC7B,GAGFC,MAAMC,QAAQF,GAAWA,EAAUA,EAAQG,MAAM,MCtCpDC,EAAa,WACjB,IAAMC,EAAsB,oBAAXC,OAA0BA,OAAiBC,UAC5D,OAAOF,GAAKA,EA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","sourcesContent":["import { Output, EventEmitter } from '@angular/core';\n\nexport interface EventObj<T> {\n  event: T;\n  editor: any;\n}\n\nexport class Events {\n  @Output() onBeforePaste: EventEmitter<EventObj<ClipboardEvent>> = new EventEmitter();\n  @Output() onBlur: EventEmitter<EventObj<FocusEvent>> = new EventEmitter();\n  @Output() onClick: EventEmitter<EventObj<MouseEvent>> = new EventEmitter();\n  @Output() onContextMenu: EventEmitter<EventObj<MouseEvent>> = new EventEmitter();\n  @Output() onCopy: EventEmitter<EventObj<ClipboardEvent>> = new EventEmitter();\n  @Output() onCut: EventEmitter<EventObj<ClipboardEvent>> = new EventEmitter();\n  @Output() onDblclick: EventEmitter<EventObj<MouseEvent>> = new EventEmitter();\n  @Output() onDrag: EventEmitter<EventObj<DragEvent>> = new EventEmitter();\n  @Output() onDragDrop: EventEmitter<EventObj<DragEvent>> = new EventEmitter();\n  @Output() onDragEnd: EventEmitter<EventObj<DragEvent>> = new EventEmitter();\n  @Output() onDragGesture: EventEmitter<EventObj<DragEvent>> = new EventEmitter();\n  @Output() onDragOver: EventEmitter<EventObj<DragEvent>> = new EventEmitter();\n  @Output() onDrop: EventEmitter<EventObj<DragEvent>> = new EventEmitter();\n  @Output() onFocus: EventEmitter<EventObj<FocusEvent>> = new EventEmitter();\n  @Output() onFocusIn: EventEmitter<EventObj<FocusEvent>> = new EventEmitter();\n  @Output() onFocusOut: EventEmitter<EventObj<FocusEvent>> = new EventEmitter();\n  @Output() onKeyDown: EventEmitter<EventObj<KeyboardEvent>> = new EventEmitter();\n  @Output() onKeyPress: EventEmitter<EventObj<KeyboardEvent>> = new EventEmitter();\n  @Output() onKeyUp: EventEmitter<EventObj<KeyboardEvent>> = new EventEmitter();\n  @Output() onMouseDown: EventEmitter<EventObj<MouseEvent>> = new EventEmitter();\n  @Output() onMouseEnter: EventEmitter<EventObj<MouseEvent>> = new EventEmitter();\n  @Output() onMouseLeave: EventEmitter<EventObj<MouseEvent>> = new EventEmitter();\n  @Output() onMouseMove: EventEmitter<EventObj<MouseEvent>> = new EventEmitter();\n  @Output() onMouseOut: EventEmitter<EventObj<MouseEvent>> = new EventEmitter();\n  @Output() onMouseOver: EventEmitter<EventObj<MouseEvent>> = new EventEmitter();\n  @Output() onMouseUp: EventEmitter<EventObj<MouseEvent>> = new EventEmitter();\n  @Output() onPaste: EventEmitter<EventObj<ClipboardEvent>> = new EventEmitter();\n  @Output() onSelectionChange: EventEmitter<EventObj<Event>> = new EventEmitter();\n  @Output() onActivate: EventEmitter<EventObj<any>> = new EventEmitter();\n  @Output() onAddUndo: EventEmitter<EventObj<any>> = new EventEmitter();\n  @Output() onBeforeAddUndo: EventEmitter<EventObj<any>> = new EventEmitter();\n  @Output() onBeforeExecCommand: EventEmitter<EventObj<any>> = new EventEmitter();\n  @Output() onBeforeGetContent: EventEmitter<EventObj<any>> = new EventEmitter();\n  @Output() onBeforeRenderUI: EventEmitter<EventObj<any>> = new EventEmitter();\n  @Output() onBeforeSetContent: EventEmitter<EventObj<any>> = new EventEmitter();\n  @Output() onChange: EventEmitter<EventObj<any>> = new EventEmitter();\n  @Output() onClearUndos: EventEmitter<EventObj<any>> = new EventEmitter();\n  @Output() onDeactivate: EventEmitter<EventObj<any>> = new EventEmitter();\n  @Output() onDirty: EventEmitter<EventObj<any>> = new EventEmitter();\n  @Output() onExecCommand: EventEmitter<EventObj<any>> = new EventEmitter();\n  @Output() onGetContent: EventEmitter<EventObj<any>> = new EventEmitter();\n  @Output() onHide: EventEmitter<EventObj<any>> = new EventEmitter();\n  @Output() onInit: EventEmitter<EventObj<any>> = new EventEmitter();\n  @Output() onLoadContent: EventEmitter<EventObj<any>> = new EventEmitter();\n  @Output() onNodeChange: EventEmitter<EventObj<any>> = new EventEmitter();\n  @Output() onPostProcess: EventEmitter<EventObj<any>> = new EventEmitter();\n  @Output() onPostRender: EventEmitter<EventObj<any>> = new EventEmitter();\n  @Output() onPreInit: EventEmitter<EventObj<any>> = new EventEmitter();\n  @Output() onPreProcess: EventEmitter<EventObj<any>> = new EventEmitter();\n  @Output() onProgressState: EventEmitter<EventObj<any>> = new EventEmitter();\n  @Output() onRedo: EventEmitter<EventObj<any>> = new EventEmitter();\n  @Output() onRemove: EventEmitter<EventObj<any>> = new EventEmitter();\n  @Output() onReset: EventEmitter<EventObj<any>> = new EventEmitter();\n  @Output() onSaveContent: EventEmitter<EventObj<any>> = new EventEmitter();\n  @Output() onSetAttrib: EventEmitter<EventObj<any>> = new EventEmitter();\n  @Output() onObjectResizeStart: EventEmitter<EventObj<any>> = new EventEmitter();\n  @Output() onObjectResized: EventEmitter<EventObj<any>> = new EventEmitter();\n  @Output() onObjectSelected: EventEmitter<EventObj<any>> = new EventEmitter();\n  @Output() onSetContent: EventEmitter<EventObj<any>> = new EventEmitter();\n  @Output() onShow: EventEmitter<EventObj<any>> = new EventEmitter();\n  @Output() onSubmit: EventEmitter<EventObj<any>> = new EventEmitter();\n  @Output() onUndo: EventEmitter<EventObj<any>> = new EventEmitter();\n  @Output() onVisualAid: EventEmitter<EventObj<any>> = new EventEmitter();\n}\n\nexport const validEvents: (keyof Events)[] = [\n  'onActivate',\n  'onAddUndo',\n  'onBeforeAddUndo',\n  'onBeforeExecCommand',\n  'onBeforeGetContent',\n  'onBeforeRenderUI',\n  'onBeforeSetContent',\n  'onBeforePaste',\n  'onBlur',\n  'onChange',\n  'onClearUndos',\n  'onClick',\n  'onContextMenu',\n  'onCopy',\n  'onCut',\n  'onDblclick',\n  'onDeactivate',\n  'onDirty',\n  'onDrag',\n  'onDragDrop',\n  'onDragEnd',\n  'onDragGesture',\n  'onDragOver',\n  'onDrop',\n  'onExecCommand',\n  'onFocus',\n  'onFocusIn',\n  'onFocusOut',\n  'onGetContent',\n  'onHide',\n  'onInit',\n  'onKeyDown',\n  'onKeyPress',\n  'onKeyUp',\n  'onLoadContent',\n  'onMouseDown',\n  'onMouseEnter',\n  'onMouseLeave',\n  'onMouseMove',\n  'onMouseOut',\n  'onMouseOver',\n  'onMouseUp',\n  'onNodeChange',\n  'onObjectResizeStart',\n  'onObjectResized',\n  'onObjectSelected',\n  'onPaste',\n  'onPostProcess',\n  'onPostRender',\n  'onPreProcess',\n  'onProgressState',\n  'onRedo',\n  'onRemove',\n  'onReset',\n  'onSaveContent',\n  'onSelectionChange',\n  'onSetAttrib',\n  'onSetContent',\n  'onShow',\n  'onSubmit',\n  'onUndo',\n  'onVisualAid'\n];\n","/**\n * Copyright (c) 2017-present, Ephox, Inc.\n *\n * This source code is licensed under the Apache 2 license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport { EventEmitter } from '@angular/core';\nimport { EditorComponent } from '../editor/editor.component';\nimport { validEvents } from '../editor/Events';\n\nexport const bindHandlers = (ctx: EditorComponent, editor: any, initEvent: Event): void => {\n  validEvents.forEach((eventName) => {\n    const eventEmitter: EventEmitter<any> = ctx[eventName];\n    if (eventEmitter.observers.length > 0) {\n      if (eventName === 'onInit') {\n        ctx.ngZone.run(() => eventEmitter.emit({ event: initEvent, editor }));\n      } else {\n        editor.on(eventName.substring(2), ctx.ngZone.run(() => (event: any) => eventEmitter.emit({ event, editor })));\n      }\n    }\n  });\n};\n\nlet unique = 0;\n\nexport const uuid = (prefix: string): string => {\n  const date = new Date();\n  const time = date.getTime();\n  const random = Math.floor(Math.random() * 1000000000);\n\n  unique++;\n\n  return prefix + '_' + random + unique + String(time);\n};\n\nexport const isTextarea = (element?: Element): element is HTMLTextAreaElement => {\n  return typeof element !== 'undefined' && element.tagName.toLowerCase() === 'textarea';\n};\n\nconst normalizePluginArray = (plugins?: string | string[]): string[] => {\n  if (typeof plugins === 'undefined' || plugins === '') {\n    return [];\n  }\n\n  return Array.isArray(plugins) ? plugins : plugins.split(' ');\n};\n\nexport const mergePlugins = (initPlugins: string | string[], inputPlugins?: string | string[]) =>\n  normalizePluginArray(initPlugins).concat(normalizePluginArray(inputPlugins));\n","/**\n * Copyright (c) 2017-present, Ephox, Inc.\n *\n * This source code is licensed under the Apache 2 license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nconst getTinymce = () => {\n  const w = typeof window !== 'undefined' ? (window as any) : undefined;\n  return w && w.tinymce ? w.tinymce : null;\n};\n\nexport { getTinymce };\n","import { Component, AfterViewInit, Input, ElementRef, OnDestroy, forwardRef, NgZone, Inject, PLATFORM_ID } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport * as ScriptLoader from '../utils/ScriptLoader';\nimport { uuid, isTextarea, bindHandlers, mergePlugins } from '../utils/Utils';\nimport { getTinymce } from '../TinyMCE';\nimport { Events } from './Events';\nimport { isPlatformBrowser } from '@angular/common';\n\nconst scriptState = ScriptLoader.create();\n\nconst EDITOR_COMPONENT_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => EditorComponent),\n  multi: true\n};\n\n@Component({\n  selector: 'editor',\n  template: '<ng-template></ng-template>',\n  styles: [':host { display: block; }'],\n  providers: [EDITOR_COMPONENT_VALUE_ACCESSOR]\n})\nexport class EditorComponent extends Events implements AfterViewInit, ControlValueAccessor, OnDestroy {\n  private elementRef: ElementRef;\n  private element: Element | undefined = undefined;\n  private editor: any;\n\n  ngZone: NgZone;\n\n  @Input() cloudChannel = '5';\n  @Input() apiKey = '';\n  @Input() init: Record<string, any> | undefined;\n  @Input() id = '';\n  @Input() initialValue: string | undefined;\n  @Input() inline: boolean | undefined;\n  @Input() tagName: string | undefined;\n  @Input() plugins: string | undefined;\n  @Input() toolbar: string | string[] | null = null;\n\n  private _disabled: boolean | undefined;\n  @Input()\n  set disabled(val) {\n    this._disabled = val;\n    if (this.editor && this.editor.initialized) {\n      this.editor.setMode(val ? 'readonly' : 'design');\n    }\n  }\n  get disabled() {\n    return this._disabled;\n  }\n\n  private onTouchedCallback = () => {};\n  private onChangeCallback = (x: any) => {};\n\n  constructor(elementRef: ElementRef, ngZone: NgZone, @Inject(PLATFORM_ID) private platformId: Object) {\n    super();\n    this.elementRef = elementRef;\n    this.ngZone = ngZone;\n    this.initialise = this.initialise.bind(this);\n  }\n\n  writeValue(value: string | null): void {\n    this.initialValue = value || this.initialValue;\n    value = value || '';\n\n    if (this.editor && this.editor.initialized && typeof value === 'string') {\n      this.editor.setContent(value);\n    }\n  }\n\n  registerOnChange(fn: (_: any) => void): void {\n    this.onChangeCallback = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouchedCallback = fn;\n  }\n\n  setDisabledState(isDisabled: boolean) {\n    if (this.editor) {\n      this.editor.setMode(isDisabled ? 'readonly' : 'design');\n    } else if (isDisabled) {\n      this.init = { ...this.init, readonly: true };\n    }\n  }\n\n  ngAfterViewInit() {\n    if (isPlatformBrowser(this.platformId)) {\n      this.id = this.id || uuid('tiny-angular');\n      this.inline =\n        typeof this.inline !== 'undefined' ? (typeof this.inline === 'boolean' ? this.inline : true) : this.init && this.init.inline;\n      this.createElement();\n      if (getTinymce() !== null) {\n        this.initialise();\n      } else if (this.element && this.element.ownerDocument) {\n        const doc = this.element.ownerDocument;\n        const channel = this.cloudChannel;\n        const apiKey = this.apiKey;\n\n        ScriptLoader.load(scriptState, doc, `https://cloud.tinymce.com/${channel}/tinymce.min.js?apiKey=${apiKey}`, this.initialise);\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    if (getTinymce() !== null) {\n      getTinymce().remove(this.editor);\n    }\n  }\n\n  createElement() {\n    const tagName = typeof this.tagName === 'string' ? this.tagName : 'div';\n    this.element = document.createElement(this.inline ? tagName : 'textarea');\n    if (this.element) {\n      this.element.id = this.id;\n      if (isTextarea(this.element)) {\n        this.element.style.visibility = 'hidden';\n      }\n      this.elementRef.nativeElement.appendChild(this.element);\n    }\n  }\n\n  initialise() {\n    const finalInit = {\n      ...this.init,\n      target: this.element,\n      inline: this.inline,\n      readonly: this.disabled,\n      plugins: mergePlugins(this.init && this.init.plugins, this.plugins),\n      toolbar: this.toolbar || (this.init && this.init.toolbar),\n      setup: (editor: any) => {\n        this.editor = editor;\n        editor.on('init', (e: Event) => {\n          this.initEditor(e, editor);\n        });\n\n        if (this.init && typeof this.init.setup === 'function') {\n          this.init.setup(editor);\n        }\n      }\n    };\n\n    if (isTextarea(this.element)) {\n      this.element.style.visibility = '';\n    }\n\n    this.ngZone.runOutsideAngular(() => {\n      getTinymce().init(finalInit);\n    });\n  }\n\n  private initEditor(initEvent: Event, editor: any) {\n    if (typeof this.initialValue === 'string') {\n      this.ngZone.run(() => editor.setContent(this.initialValue));\n    }\n    editor.on('blur', () => this.ngZone.run(() => this.onTouchedCallback()));\n    editor.on('change keyup undo redo', () => this.ngZone.run(() => this.onChangeCallback(editor.getContent())));\n    bindHandlers(this, editor, initEvent);\n  }\n}\n","/**\n * Copyright (c) 2017-present, Ephox, Inc.\n *\n * This source code is licensed under the Apache 2 license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport { uuid } from './Utils';\n\nexport type callbackFn = () => void;\nexport interface IStateObj {\n  listeners: callbackFn[];\n  scriptId: string;\n  scriptLoaded: boolean;\n}\n\nconst injectScriptTag = (scriptId: string, doc: Document, url: string, callback: callbackFn) => {\n  const scriptTag = doc.createElement('script');\n  scriptTag.type = 'application/javascript';\n  scriptTag.id = scriptId;\n  scriptTag.addEventListener('load', callback);\n  scriptTag.src = url;\n  if (doc.head) {\n    doc.head.appendChild(scriptTag);\n  }\n};\n\nexport const create = (): IStateObj => {\n  return {\n    listeners: [],\n    scriptId: uuid('tiny-script'),\n    scriptLoaded: false\n  };\n};\n\nexport const load = (state: IStateObj, doc: Document, url: string, callback: callbackFn) => {\n  if (state.scriptLoaded) {\n    callback();\n  } else {\n    state.listeners.push(callback);\n    if (!doc.getElementById(state.scriptId)) {\n      injectScriptTag(state.scriptId, doc, url, () => {\n        state.listeners.forEach((fn) => fn());\n        state.scriptLoaded = true;\n      });\n    }\n  }\n};\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { EditorComponent } from './editor.component';\n\n@NgModule({\n  imports: [CommonModule, FormsModule],\n  declarations: [EditorComponent],\n  exports: [EditorComponent]\n})\nexport class EditorModule {}\n"]}